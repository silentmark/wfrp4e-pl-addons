import js from '@eslint/js';
import stylisticJs from '@stylistic/eslint-plugin-js';
import jsdoc from 'eslint-plugin-jsdoc';

export default [
    js.configs.recommended,
    {
        plugins: {
            '@stylistic/js': stylisticJs,
            jsdoc: jsdoc,
        },
        languageOptions: {
            ecmaVersion: 2024,
            sourceType: 'module',
            globals: {
                // Foundry VTT globals
                game: 'readonly',
                ui: 'readonly',
                canvas: 'readonly',
                CONFIG: 'readonly',
                CONST: 'readonly',
                foundry: 'readonly',
                Hooks: 'readonly',
                Actor: 'readonly',
                Item: 'readonly',
                Token: 'readonly',
                Scene: 'readonly',
                Combat: 'readonly',
                ChatMessage: 'readonly',
                User: 'readonly',
                Roll: 'readonly',
                FormApplication: 'readonly',
                Application: 'readonly',
                Dialog: 'readonly',
                // jQuery
                $: 'readonly',
                // WFRP4e specific globals
                warhammer: 'readonly',
                WarhammerActor: 'readonly',
                ActorWFRP4e: 'readonly',
                SocketHandlers: 'readonly',
                AreaHelpers: 'readonly',
                TokenHelpers: 'readonly',
                SkillDialog: 'readonly',
                ArmourModel: 'readonly',
                setProperty: 'readonly',
                renderTemplate: 'readonly',
                Ray: 'readonly',
                PIXI: 'readonly',
                sleep: 'readonly',
                jQuery: 'readonly',
                WFRP_Utility: 'readonly',
                CombatHelpers: 'readonly',
                duplicate: 'readonly',
                TestWFRP: 'readonly',
                AutoCover: 'readonly',
                Sequence: 'readonly',
                ChannelTest: 'readonly',
                CastTest$1: 'readonly',
                WeaponTest: 'readonly',
                WeaponDialog: 'readonly',
                libWrapper: 'readonly',
                // Browser globals
                window: 'readonly',
                document: 'readonly',
                console: 'readonly',
                setTimeout: 'readonly',
                clearTimeout: 'readonly',
                setInterval: 'readonly',
                clearInterval: 'readonly',
                Math: 'readonly',
                Number: 'readonly',
                Reflect: 'readonly',
                Map: 'readonly',
                Set: 'readonly',
                WeakMap: 'readonly',
                WeakSet: 'readonly',
                Promise: 'readonly',
                fetch: 'readonly',
                URL: 'readonly',
                RegExp: 'readonly',
                JSON: 'readonly',
                Object: 'readonly',
                Array: 'readonly',
                String: 'readonly',
                Boolean: 'readonly',
                Symbol: 'readonly',
                BigInt: 'readonly',
                Error: 'readonly',
                TypeError: 'readonly',
                RangeError: 'readonly',
                ReferenceError: 'readonly',
                SyntaxError: 'readonly',
                EvalError: 'readonly',
                URIError: 'readonly',
                AggregateError: 'readonly',
                parseInt: 'readonly',
                parseFloat: 'readonly',
                isNaN: 'readonly',
                isFinite: 'readonly',
                decodeURI: 'readonly',
                decodeURIComponent: 'readonly',
                encodeURI: 'readonly',
                encodeURIComponent: 'readonly',
                escape: 'readonly',
                unescape: 'readonly',
                eval: 'readonly',
                Date: 'readonly',
                // Node.js specific (for build scripts)
                process: 'readonly',
                Buffer: 'readonly',
                __dirname: 'readonly',
                __filename: 'readonly',
                module: 'readonly',
                exports: 'readonly',
                require: 'readonly',
                global: 'readonly',
            },
        },
        rules: {
            // Code quality rules - relaxed for this project
            'no-unused-vars': ['warn', { argsIgnorePattern: '^_' }],
            'no-console': 'off', // Allow console in Foundry modules
            'no-debugger': 'error',
            'no-alert': 'error',
            'no-eval': 'warn', // Allow eval in test modules
            'no-implied-eval': 'error',
            'no-new-func': 'error',
            'no-script-url': 'error',
            'no-self-compare': 'error',
            'no-sequences': 'error',
            'no-throw-literal': 'error',
            'no-unmodified-loop-condition': 'error',
            'no-unused-expressions': 'error',
            'no-useless-call': 'error',
            'no-useless-concat': 'error',
            'no-useless-return': 'error',
            'no-void': 'error',
            'no-with': 'error',
            'prefer-promise-reject-errors': 'error',
            'radix': 'error',
            'require-await': 'warn',
            'yoda': 'error',
            
            // ES6+ rules
            'prefer-const': 'error',
            'prefer-arrow-callback': 'error',
            'prefer-template': 'error',
            'no-var': 'error',
            'object-shorthand': 'error',
            'prefer-destructuring': ['error', { object: true, array: false }],
            
            // Style rules
            '@stylistic/js/indent': ['error', 2],
            '@stylistic/js/quotes': ['error', 'single'],
            '@stylistic/js/semi': ['error', 'always'],
            '@stylistic/js/comma-dangle': ['error', 'always-multiline'],
            '@stylistic/js/brace-style': ['error', '1tbs'],
            '@stylistic/js/object-curly-spacing': ['error', 'always'],
            '@stylistic/js/array-bracket-spacing': ['error', 'never'],
            '@stylistic/js/space-before-blocks': 'error',
            '@stylistic/js/space-before-function-paren': ['error', 'never'],
            '@stylistic/js/space-in-parens': ['error', 'never'],
            '@stylistic/js/space-infix-ops': 'error',
            '@stylistic/js/space-unary-ops': 'error',
            '@stylistic/js/spaced-comment': ['error', 'always'],
            '@stylistic/js/keyword-spacing': 'error',
            '@stylistic/js/no-trailing-spaces': 'error',
            '@stylistic/js/no-multiple-empty-lines': ['error', { max: 1, maxEOF: 0 }],
            '@stylistic/js/eol-last': 'error',
            
            // JSDoc rules - relaxed for this project
            'jsdoc/require-description': 'off',
            'jsdoc/require-description-complete-sentence': 'off',
            'jsdoc/require-hyphen-before-param-description': 'off',
            'jsdoc/require-jsdoc': 'off',
            'jsdoc/require-param': 'off',
            'jsdoc/require-param-description': 'off',
            'jsdoc/require-param-name': 'off',
            'jsdoc/require-param-type': 'off',
            'jsdoc/require-property': 'off',
            'jsdoc/require-property-description': 'off',
            'jsdoc/require-property-name': 'off',
            'jsdoc/require-property-type': 'off',
            'jsdoc/require-returns': 'off',
            'jsdoc/require-returns-check': 'off',
            'jsdoc/require-returns-description': 'off',
            'jsdoc/require-returns-type': 'off',
            'jsdoc/require-throws': 'off',
            'jsdoc/require-yields': 'off',
            'jsdoc/require-yields-check': 'off',
            'jsdoc/tag-lines': 'error',
            'jsdoc/valid-types': 'error',
        },
    },
];