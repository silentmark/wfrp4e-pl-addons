{
  "_id": "luPaokIKrKsvRQiQ",
  "name": "Bezbożna Regeneracja (TODO)",
  "type": "talent",
  "flags": {
    "core": {}
  },
  "img": "modules/wfrp4e-vampires/assets/icons/blood-gift.webp",
  "effects": [
    {
      "_id": "nQcvdltZ7SmR2WRX",
      "flags": {
        "wfrp4e": {
          "applicationData": {
            "type": "document",
            "documentType": "Actor",
            "equipTransfer": false,
            "avoidTest": {
              "value": "none"
            },
            "testIndependent": false,
            "prompt": false
          },
          "scriptData": [
            {
              "label": "Bezbożna Regeneracja",
              "trigger": "immediate",
              "script": "console.log(args)\n\n// Check what level of Unholy Regeneration is present\n// This throws an error on first addition of talent but it doesn't matter\nlet actorHasUnholyRegeneration = args.actor.data.talents.find(talent => talent.name === \"Unholy Regeneration\");\nlet actorUnholyRegenerationLevel = actorHasUnholyRegeneration.data.advances.value;\n\nconsole.log(actorHasUnholyRegeneration ,actorUnholyRegenerationLevel );\n\n// Now test if level two, and if so add Regeneration\n// Level two because it's checking _before_ adding the talent\nif (actorUnholyRegenerationLevel === 2) {\n  fromUuid(\"Compendium.wfrp4e-core.traits.SfUUdOGjdYpr3KSR\").then(item => {\n    args.actor.createEmbeddedEntity(\"OwnedItem\", item.data);\n  })\n}",
              "options": {
                "dialog": {
                  "hideScript": "",
                  "activateScript": "",
                  "submissionScript": "",
                  "targeter": false
                },
                "immediate": {
                  "deleteEffect": false
                }
              }
            }
          ],
          "_legacyData": {
            "effectApplication": "actor",
            "effectTrigger": "oneTime",
            "preventDuplicateEffects": false,
            "script": "console.log(args)\n\n// Check what level of Unholy Regeneration is present\n// This throws an error on first addition of talent but it doesn't matter\nlet actorHasUnholyRegeneration = args.actor.data.talents.find(talent => talent.name === \"Unholy Regeneration\");\nlet actorUnholyRegenerationLevel = actorHasUnholyRegeneration.data.advances.value;\n\nconsole.log(actorHasUnholyRegeneration ,actorUnholyRegenerationLevel );\n\n// Now test if level two, and if so add Regeneration\n// Level two because it's checking _before_ adding the talent\nif (actorUnholyRegenerationLevel === 2) {\n  fromUuid(\"Compendium.wfrp4e-core.traits.SfUUdOGjdYpr3KSR\").then(item => {\n    args.actor.createEmbeddedEntity(\"OwnedItem\", item.data);\n  })\n}"
          }
        }
      },
      "changes": [],
      "disabled": false,
      "duration": {
        "startTime": null,
        "seconds": null,
        "rounds": null,
        "turns": null,
        "startRound": null,
        "startTurn": null,
        "combat": null
      },
      "icon": "modules/wfrp4e-vampires/assets/icons/blood-gift.webp",
      "tint": null,
      "transfer": true,
      "name": "Bezbożna Regeneracja",
      "description": "",
      "origin": null,
      "statuses": [],
      "_key": "!items.effects!luPaokIKrKsvRQiQ.nQcvdltZ7SmR2WRX"
    }
  ],
  "system": {
    "description": {
      "type": "String",
      "label": "Description",
      "value": "<p>Siły Dhar, które cię napełniają, z czasem powoli zszywają twoje Rany, chociaż Rany zagojone w ten sposób nie mają wpływu na karmienie ani głód.</p><p>Każdy nowy poziom tego Daru Krwi zastępuje efekt poprzedniego poziomu. Zakup jednego poziomu tego Daru Krwi działa jak talent @Compendium[wfrp4e-core.items.SfUUdOGjdYpr3KSR]{Regeneracja}, o ile rany nie pochodzą od słońca lub posiadanej Słabości. Każdy kolejny zakup tego Daru Krwi zwiększa liczbę leczonych ran o bonus z Wt oraz zmniejsza wartość rzutu o 1, który leczy ranę krytyczną.</p>"
    },
    "gmdescription": {
      "type": "String",
      "label": "Description",
      "value": ""
    },
    "max": {
      "type": "String",
      "label": "Max Advances",
      "value": "t"
    },
    "advances": {
      "type": "Number",
      "label": "Advances",
      "value": 1,
      "force": false
    },
    "career": {
      "value": "",
      "type": "String",
      "label": "Career"
    },
    "tests": {
      "type": "String",
      "label": "Tests",
      "value": ""
    }
  },
  "folder": "R9GP6kUptFm6hQ24",
  "_stats": {
    "systemId": "wfrp4e",
    "systemVersion": "7.0.3",
    "coreVersion": "11.311",
    "createdTime": 1707133198256,
    "modifiedTime": 1707133266017,
    "lastModifiedBy": "NBxjSXoDTuPJSWHT"
  },
  "sort": 1100000,
  "ownership": {
    "default": 0,
    "NBxjSXoDTuPJSWHT": 3
  },
  "_key": "!items!luPaokIKrKsvRQiQ"
}
