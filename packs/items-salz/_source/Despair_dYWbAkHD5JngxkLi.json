{
  "name": "Despair",
  "type": "trait",
  "img": "systems/wfrp4e/icons/blank.png",
  "folder": "bcsBo6VcLKfBnjXc",
  "flags": {
    "wfrp4e-salzenmund": {
      "initialization-folder": "Spites of the Laurelorn",
      "sort": 0
    }
  },
  "system": {
    "description": {
      "type": "String",
      "label": "Description",
      "value": ""
    },
    "gmdescription": {
      "type": "String",
      "label": "Description",
      "value": "<p>Despairs are solitary spirits with a greater command of magic than their fellows. They choose to appear as tiny, withered crones, and are rarely seen by any, save perhaps favoured Eonir. Despairs are skilled at following the skeins of fate and their appearance is said by Wood Elves to presage death.</p><p></p>"
    },
    "rollable": {
      "value": false,
      "damage": false,
      "skill": "",
      "label": "Rollable",
      "type": "Boolean",
      "rollCharacteristic": "",
      "bonusCharacteristic": "",
      "dice": "",
      "defaultDifficulty": "challenging",
      "SL": true,
      "attackType": "melee"
    },
    "specification": {
      "value": "",
      "type": "String",
      "label": "Specification"
    },
    "qualities": {
      "label": "Qualities",
      "value": []
    },
    "flaws": {
      "label": "Flaws",
      "value": []
    }
  },
  "effects": [
    {
      "icon": "systems/wfrp4e/icons/blank.png",
      "transfer": true,
      "_id": "MeBfR9ZrPFrMc2nK",
      "changes": [],
      "disabled": false,
      "duration": {
        "startTime": null,
        "seconds": null,
        "combat": null,
        "rounds": null,
        "turns": null,
        "startRound": null,
        "startTurn": null
      },
      "origin": null,
      "tint": null,
      "flags": {
        "wfrp4e": {
          "effectTrigger": "oneTime",
          "effectApplication": "actor",
          "hide": false,
          "preventDuplicateEffects": false,
          "script": "let characteristics = {\n  \"ws\" : -10,\n  \"bs\" : -10,\n  \"s\" : 0,\n  \"t\" : 15,\n  \"i\" : 15,\n  \"ag\" : -20,\n  \"dex\" : 0,\n  \"int\" : 20,\n  \"wp\" : 10,\n  \"fel\" : 10\n}\nlet skills = [\"Charm\", \"Channelling\", \"Entertain (Prophecy)\", \"Intuition\"]\nlet skillAdvancements = [0, 0, 20, 10]\nlet talents = [\"Detect Artefact\", \"Menacing\", \"Sixth Sense\"]\nlet traits = [\"Dooming\", \"Spellcaster (Lore of Life)\", \"Ward\"]\nlet trappings = []\nlet items = [];\nlet spells = [\"Forest of Thorns\"];\n\nlet updateObj = this.actor.toObject();\n\nfor (let ch in characteristics)\n{\n  updateObj.system.characteristics[ch].modifier += characteristics[ch];\n}\n\nfor (let index = 0; index < skills.length; index++)\n{\n  let skill = skills[index]\n  let skillItem;\n  skillItem = updateObj.items.find(i => i.name == skill && i.type == \"skill\")\n  if (skillItem)\n      skillItem.system.advances.value += skillAdvancements[index]\n  else \n  {\n      skillItem = await game.wfrp4e.utility.findSkill(skill)\n      skillItem = skillItem.toObject();\n      skillItem.system.advances.value = skillAdvancements[index];\n      items.push(skillItem);\n  }\n}\n\nfor (let talent of talents)\n{\n  let talentItem = await game.wfrp4e.utility.findTalent(talent)\n  if (talentItem)\n  {\n      items.push(talentItem.toObject());\n  }\n  else \n  {\n      ui.notifications.warn(`Could not find ${talent}`, {permanent : true})\n  }\n}\n\nconst traitRegex = /(?:,?(.+?)(\\+?\\d{1,2}\\+?)?\\s*?(?:\\((.+?)\\)\\s*(\\+?\\d{1,2})?|,|$))/gm\nfor (let trait of traits)\n{\n  let traitMatches = trait.matchAll(traitRegex).next().value\n  let traitName = traitMatches[1]\n  let traitVal = traitMatches[2] || traitMatches[4] // could be match 2 or 4 depending on if there's a specialization\n  let traitSpec = traitMatches[3]\n\n  let traitItem;\n  try {\n      traitItem = await WFRP_Utility.findItem(traitName, \"trait\")\n  }\n  catch { }\n  if (!traitItem) {\n      ui.notifications.warn(`Could not find ${trait}`, {permanent : true})\n  }\n  traitItem = traitItem.toObject()\n\n  if (Number.isNumeric(traitVal))\n  {\n      traitItem.system.specification.value = traitName.includes('Weapon','Horns','Tail','Tentacles','Bite') ? traitVal - parseInt(characteristicValues[3]/10) : traitVal;\n      traitItem.name = (traitItem.name +  ` ${traitSpec ? \"(\"+ traitSpec + \")\" : \"\"}`).trim()\n  }\n  else \n      traitItem.system.specification.value = traitSpec\n\n  items.push(traitItem)\n\n}\n\nfor (let trapping of trappings) \n{\n  let trappingItem = await game.wfrp4e.utility.findItem(trapping)\n  if (trappingItem)\n  {\n      trappingItem = trappingItem.toObject()\n\n      equip(trappingItem)\n\n      items.push(trappingItem);\n  }\n  else \n  {\n      ui.notifications.warn(`Could not find ${trapping}`, {permanent : true})\n  }\n}\n\nfor (let spell of spells) \n{\n  let spellItem = await game.wfrp4e.utility.findItem(spell)\n  if (spellItem)\n  {\n      spellItem = spellItem.toObject()\n\n      items.push(spellItem);\n  }\n  else \n  {\n      ui.notifications.warn(`Could not find ${spell}`, {permanent : true})\n  }\n}\n\nupdateObj.name = updateObj.name += \" \" + this.effect.name\n\nawait this.actor.update(updateObj)\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\n\nfunction equip(item)\n{\n  if (item.type == \"armour\")\n      item.worn = true\n  else if (item.type == \"weapon\")\n      item.equipped = true\n  else if (item.type == \"trapping\" && item.trappingType?.value == \"clothingAccessories\")\n      item.worn = true\n}"
        }
      },
      "name": "Despair",
      "description": "",
      "statuses": [],
      "_key": "!items.effects!dYWbAkHD5JngxkLi.MeBfR9ZrPFrMc2nK"
    }
  ],
  "sort": 0,
  "ownership": {
    "default": 0,
    "wjUQkVmn4leETiQ6": 3
  },
  "_stats": {
    "systemId": "wfrp4e",
    "systemVersion": "7.0.0",
    "coreVersion": "11.307",
    "createdTime": 1687134833761,
    "modifiedTime": 1693273572805,
    "lastModifiedBy": "sAiwDCZFd21tgaDN"
  },
  "_id": "dYWbAkHD5JngxkLi",
  "_key": "!items!dYWbAkHD5JngxkLi"
}
